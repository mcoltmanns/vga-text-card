operate in 640x480, pixel clock at 25.175mhz

when not in visible area, can write to pixbuffer

column timing
	visible area - 640 columns - starts on 0, ends on 639 - high 00 0000 0000 to 10 0111 1111, low else
	front porch - 16 columns - starts on 640, ends on 655
	sync - 96 columns - starts on 656, ends on 751 - low 10 1001 0000 to 10 1110 1111, high else
	back porch - 48 columns - starts on 752, ends on 799
	beyond 11 0010 0000 we do not care what the sync lines do

lines are used to count vertical timing
	visible area - 480 lines - starts on line 0, ends on line 479 - b00 0000 0000 to b01 1101 1111
	front porch - 10 lines - starts on line 480, ends on line 489 - b0001 1110 0000 to b0001 1110 1001
	sync pulse - 2 lines - starts on line 490, ends on line 491 - b01 1110 1010 to b01 1110 1011
	back porch - 33 lines (1ms) - starts on line 492, ends on line 524 - b0001 1110 1100 to b0010 0000 1100
	-> this constitutes a frame (525 lines) (16ms)

video lines are only active when in visible area, otherwise low
hsync is only low during hsync pulse, otherwise high
vsync is only low during vsync pulse, otherwise 

two signals per axis:
- vis: high in visible area, low otherwise
- sync: low during sync, high otherwise

we get 1ms to write 4,800 characters at most. that means we need to be able to write 4,800,000 characters per second (4.8MHz!)
if we only read from the char buffer every other frame, we get a whole ~16ms (1 frame) to write 4,800 chars. this is a much more reasonable 300ch/ms, or 300,000ch/sec (only 3 khz). this seems more doable

how would this doublebuffer work? probably just a t or jk latch that we toggle every frame. when output is high, enable one ram/disable the other. when output is low, do opposite

HARDWARE
clock: 25.175mhz quartz clock
clock divider: 4-bit counter that resets every 8 pulses (count to 7 / b0111) TI 74HC161N
column counter: 8-bit counter that resets every 100 pulses (count to 99 / b0110 0011) TI 74HC161N x2
line counter: 12-bit counter that resets every 525 pulses (count to 524 / b0010 0000 1100) TI 74HC161N x3

can pull sync pulses by and-combos